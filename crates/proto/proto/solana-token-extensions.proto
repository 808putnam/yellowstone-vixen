syntax = "proto3";

package solana.token.extensions;

import public "solana-token-program.proto";


message ImmutableOwner{

}

message TransferFeeAmount{
    uint64 withheld_amount = 1;
}

message ConfidentialTransferAccount{
    bool approved = 1;
    bytes elgamal_pubkey = 2;
    bytes pending_balance_lo = 3;
    bytes pending_balance_hi = 4;
    bytes pending_balance = 5;
    bytes available_balance = 6;
    bytes decryptable_available_balance = 7;
    bool allow_confidential_credits = 8;
    uint64 pending_balance_credit_counter = 9;
    uint64 maximum_pending_balance_credit_counter = 10;
    uint64 expected_pending_balance_credit_counter = 11;
    uint64 actual_pending_balance_credit_counter = 12;
}

message MemoTransfer{
    bool require_incoming_transfer_memos = 1;
}

message NonTransferableAccount{
}

message TransferHookAccount{
    bool transferring = 1;
}

message CpiGuard{
    bool lock_cpi = 1;
}

message ConfidentialTransferFeeAmount{
    bytes withheld_amount = 1;
}

message TransferFee{
    uint64 epoch = 1;
    uint64 maximum_fee = 2;
    uint64 transfer_fee_basis_points = 3;
}

message TransferFeeConfig{
    bytes transfer_fee_config_authority = 1;
    bytes withdraw_withheld_authority = 2;
    uint64 withheld_amount = 3;
    TransferFee older_transfer_fee = 4;
    TransferFee newer_transfer_fee = 5;
}

message MintCloseAuthority{
    bytes mint_close_authority = 1;
}

message ConfidentialTransferMint{
    bytes authority = 1;
    bool auto_approve_new_accounts = 2;
    bytes auditor_elgamal_pubkey = 3;
}


message DefaultAccountState{
    uint64 account_state = 1;
}

message NonTransferable{
}

message InterestBearingConfig{
    bytes rates_authority = 1;
    int64 initialization_timestamp = 2;
    int64 pre_update_average_rate = 3;
    int64 last_update_timestamp = 4;
    int64 current_rate = 5;
}

message PermanentDelegate{
    bytes delegate = 1;
}

message TransferHook{
    bytes authority = 1;
    bytes program_id = 2;
}

message ConfidentialTransfeeConfig {
    bytes authority = 1;
    bytes withdraw_withheld_authority_elgamal_pubkey = 2;
    bool harvest_to_mint_enaabled = 3;
    bytes withheld_amount = 4;
}

message MetadataPointer{
    bytes authority = 1;
    bytes metadata_address = 2;
}

message KeyValue{
    string key = 1;
    string value = 2;
}

message TokenMetadata{
    bytes update_authority = 1;
    bytes mint = 2;
    string name = 3;
    string symbol = 4;
    string uri = 5;
    repeated KeyValue additional_metadata = 6;
}

message GroupPointer{
    bytes authority = 1;
    bytes group_address = 2;
}

message TokenGroup{
    bytes update_authority = 1;
    bytes mint = 2;
    uint32 size = 3;
    uint32 max_size = 4;
}

message GroupMemberPointer{
    bytes authority = 1;
    bytes member_address = 3;
}

message TokenGroupMember{
    bytes mint = 2;
    bytes group = 3;
    bytes member_number = 4;
}


message ExtensionData {
    oneof data {
        ImmutableOwner immutable_owner = 1;
        TransferFeeAmount transfer_fee_amount = 2;
        ConfidentialTransferAccount confidential_transfer_account = 3;
        MemoTransfer memo_transfer = 4;
        NonTransferableAccount non_transferable_account = 5;
        TransferHookAccount transfer_hook_account = 6;
        CpiGuard cpi_guard = 7;
        ConfidentialTransferFeeAmount confidential_transfer_fee_amount = 8;
        TransferFeeConfig transfer_fee_config = 9;
        MintCloseAuthority mint_close_authority = 10;
        ConfidentialTransferMint confidential_transfer_mint = 11;
        DefaultAccountState default_account_state = 12;
        NonTransferable non_transferable = 13;
        InterestBearingConfig interest_bearing_config = 14;
        PermanentDelegate permanent_delegate = 15;
        TransferHook transfer_hook = 16;
        ConfidentialTransfeeConfig confidential_transfee_config = 17;
        MetadataPointer metadata_pointer = 18;
        TokenMetadata token_metadata = 19;
        GroupPointer group_pointer = 20;
        TokenGroup token_group = 21;
        GroupMemberPointer group_member_pointer = 22;
        TokenGroupMember token_group_member = 23;
    }
}

message ExtendedTokenAccount {
    solana.token.program.TokenAccount base_account = 1;
    repeated ExtensionData extension_data_vec = 2;
}

message ExtendedTokenMint {
   solana.token.program.Mint base_mint = 1;
    repeated ExtensionData extension_data_vec = 2;
}
message ExtendedTokenMultisig {
    solana.token.program.Multisig base_multisig = 1;
    repeated ExtensionData extension_data_vec = 2;
}

